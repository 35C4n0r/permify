{
    "swagger": "2.0",
    "info": {
        "title": "Permify API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3476",
    "basePath": "/v1",
    "paths": {
        "/permissions/check": {
            "post": {
                "description": "Check subject is authorized",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission"
                ],
                "summary": "Permission",
                "operationId": "permissions.check",
                "parameters": [
                    {
                        "description": "''",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/permission.CheckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/permission.ExpandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.HTTPErrorResponse"
                        }
                    }
                }
            }
        },
        "/permissions/expand": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission"
                ],
                "summary": "Permission",
                "operationId": "permissions.expand",
                "parameters": [
                    {
                        "description": "''",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/permission.ExpandRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/permission.ExpandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.HTTPErrorResponse"
                        }
                    }
                }
            }
        },
        "/relationships/delete": {
            "post": {
                "description": "delete relation tuple",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relationship"
                ],
                "summary": "Relationship",
                "operationId": "relationships.delete",
                "parameters": [
                    {
                        "description": "''",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/relationship.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tuple.Tuple"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.HTTPErrorResponse"
                        }
                    }
                }
            }
        },
        "/relationships/read": {
            "post": {
                "description": "read relation tuple(s)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relationship"
                ],
                "summary": "Relationship",
                "operationId": "relationships.read",
                "parameters": [
                    {
                        "description": "''",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/relationship.ReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tuple.Tuple"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.HTTPErrorResponse"
                        }
                    }
                }
            }
        },
        "/relationships/write": {
            "post": {
                "description": "create new relation tuple",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relationship"
                ],
                "summary": "Relationship",
                "operationId": "relationships.write",
                "parameters": [
                    {
                        "description": "''",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/relationship.WriteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tuple.Tuple"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.HTTPErrorResponse"
                        }
                    }
                }
            }
        },
        "/schemas/read/:schema_version": {
            "get": {
                "description": "read your authorization model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schema"
                ],
                "summary": "Schema",
                "operationId": "schemas.read",
                "parameters": [
                    {
                        "description": "''",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.ReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schema.Entity"
                            }
                        }
                    }
                }
            }
        },
        "/schemas/write": {
            "post": {
                "description": "replace your authorization model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schema"
                ],
                "summary": "Schema",
                "operationId": "schemas.write",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.WriteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.HTTPErrorResponse"
                        }
                    }
                }
            }
        },
        "/status/ping": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Server"
                ],
                "summary": "Server",
                "operationId": "ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.HTTPErrorResponse"
                        }
                    }
                }
            }
        },
        "/status/version": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Server"
                ],
                "summary": "Server",
                "operationId": "version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.HTTPErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "filters.RelationTupleFilter": {
            "type": "object",
            "properties": {
                "entity": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "relation": {
                    "type": "string"
                },
                "subject_id": {
                    "type": "string"
                },
                "subject_relation": {
                    "type": "string"
                },
                "subject_type": {
                    "type": "string"
                }
            }
        },
        "permission.CheckRequest": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "*\n\t * Body",
                    "type": "object",
                    "properties": {
                        "action": {
                            "type": "string"
                        },
                        "depth": {
                            "type": "integer"
                        },
                        "entity": {
                            "$ref": "#/definitions/tuple.Entity"
                        },
                        "schema_version": {
                            "type": "string"
                        },
                        "subject": {
                            "$ref": "#/definitions/tuple.Subject"
                        }
                    }
                },
                "pathParams": {
                    "description": "*\n\t * PathParams",
                    "type": "object"
                },
                "queryParams": {
                    "description": "*\n\t * QueryParams",
                    "type": "object"
                }
            }
        },
        "permission.ExpandRequest": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "*\n\t * Body",
                    "type": "object",
                    "properties": {
                        "action": {
                            "type": "string"
                        },
                        "entity": {
                            "$ref": "#/definitions/tuple.Entity"
                        },
                        "schema_version": {
                            "type": "string"
                        }
                    }
                },
                "pathParams": {
                    "description": "*\n\t * PathParams",
                    "type": "object"
                },
                "queryParams": {
                    "description": "*\n\t * QueryParams",
                    "type": "object"
                }
            }
        },
        "permission.ExpandResponse": {
            "type": "object",
            "properties": {
                "tree": {}
            }
        },
        "relationship.DeleteRequest": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "*\n\t * Body",
                    "type": "object",
                    "properties": {
                        "entity": {
                            "$ref": "#/definitions/tuple.Entity"
                        },
                        "relation": {
                            "type": "string"
                        },
                        "subject": {
                            "$ref": "#/definitions/tuple.Subject"
                        }
                    }
                },
                "pathParams": {
                    "description": "*\n\t * PathParams",
                    "type": "object"
                },
                "queryParams": {
                    "description": "*\n\t * QueryParams",
                    "type": "object"
                }
            }
        },
        "relationship.ReadRequest": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "*\n\t * Body",
                    "type": "object",
                    "properties": {
                        "filter": {
                            "$ref": "#/definitions/filters.RelationTupleFilter"
                        }
                    }
                },
                "pathParams": {
                    "description": "*\n\t * PathParams",
                    "type": "object"
                },
                "queryParams": {
                    "description": "*\n\t * QueryParams",
                    "type": "object"
                }
            }
        },
        "relationship.WriteRequest": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "*\n\t * Body",
                    "type": "object",
                    "properties": {
                        "entity": {
                            "$ref": "#/definitions/tuple.Entity"
                        },
                        "relation": {
                            "type": "string"
                        },
                        "subject": {
                            "$ref": "#/definitions/tuple.Subject"
                        }
                    }
                },
                "pathParams": {
                    "description": "*\n\t * PathParams",
                    "type": "object"
                },
                "queryParams": {
                    "description": "*\n\t * QueryParams",
                    "type": "object"
                }
            }
        },
        "responses.HTTPErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {}
            }
        },
        "responses.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schema.Action": {
            "type": "object",
            "properties": {
                "child": {},
                "name": {
                    "type": "string"
                }
            }
        },
        "schema.Entity": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Action"
                    }
                },
                "name": {
                    "type": "string"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Relation"
                    }
                }
            }
        },
        "schema.ReadRequest": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "*\n\t * Body",
                    "type": "object"
                },
                "pathParams": {
                    "description": "*\n\t * PathParams",
                    "type": "object",
                    "properties": {
                        "schemaVersion": {
                            "type": "string"
                        }
                    }
                },
                "queryParams": {
                    "description": "*\n\t * QueryParams",
                    "type": "object"
                }
            }
        },
        "schema.Relation": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schema.WriteResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        },
        "tuple.Entity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "tuple.Subject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "relation": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "tuple.Tuple": {
            "type": "object",
            "properties": {
                "entity": {
                    "$ref": "#/definitions/tuple.Entity"
                },
                "relation": {
                    "type": "string"
                },
                "subject": {
                    "$ref": "#/definitions/tuple.Subject"
                }
            }
        }
    }
}