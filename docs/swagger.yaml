basePath: /v1
definitions:
  permission.Check:
    properties:
      body:
        description: "*\n\t * Body"
        properties:
          action:
            type: string
          depth:
            type: integer
          entity:
            $ref: '#/definitions/tuple.Entity'
          subject:
            $ref: '#/definitions/tuple.Subject'
        type: object
      pathParams:
        description: "*\n\t * PathParams"
        type: object
      queryParams:
        description: "*\n\t * QueryParams"
        type: object
    type: object
  permission.Expand:
    properties:
      body:
        description: "*\n\t * Body"
        properties:
          action:
            type: string
          depth:
            type: integer
          entity:
            $ref: '#/definitions/tuple.Entity'
        type: object
      pathParams:
        description: "*\n\t * PathParams"
        type: object
      queryParams:
        description: "*\n\t * QueryParams"
        type: object
    type: object
  relationship.Delete:
    properties:
      body:
        description: "*\n\t * Body"
        properties:
          entity:
            $ref: '#/definitions/tuple.Entity'
          relation:
            type: string
          subject:
            $ref: '#/definitions/tuple.Subject'
        type: object
      pathParams:
        description: "*\n\t * PathParams"
        type: object
      queryParams:
        description: "*\n\t * QueryParams"
        type: object
    type: object
  relationship.Write:
    properties:
      body:
        description: "*\n\t * Body"
        properties:
          entity:
            $ref: '#/definitions/tuple.Entity'
          relation:
            type: string
          subject:
            $ref: '#/definitions/tuple.Subject'
        type: object
      pathParams:
        description: "*\n\t * PathParams"
        type: object
      queryParams:
        description: "*\n\t * QueryParams"
        type: object
    type: object
  responses.Check:
    properties:
      can:
        type: boolean
      decisions: {}
      remaining_depth:
        type: integer
    type: object
  responses.Expand:
    properties:
      remaining_depth:
        type: integer
      tree: {}
    type: object
  responses.HTTPErrorResponse:
    properties:
      errors: {}
    type: object
  responses.Message:
    properties:
      message:
        type: string
    type: object
  schema.Action:
    properties:
      child: {}
      name:
        type: string
    type: object
  schema.Entity:
    properties:
      actions:
        items:
          $ref: '#/definitions/schema.Action'
        type: array
      name:
        type: string
      relations:
        items:
          $ref: '#/definitions/schema.Relation'
        type: array
    type: object
  schema.Relation:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  tuple.Entity:
    properties:
      id:
        type: string
      type:
        type: string
    type: object
  tuple.Subject:
    properties:
      id:
        type: string
      relation:
        type: string
      type:
        type: string
    type: object
  tuple.Tuple:
    properties:
      entity:
        $ref: '#/definitions/tuple.Entity'
      relation:
        type: string
      subject:
        $ref: '#/definitions/tuple.Subject'
    type: object
host: localhost:3476
info:
  contact: {}
  title: Permify API
  version: "1.0"
paths:
  /permissions/check:
    post:
      consumes:
      - application/json
      description: Check subject is authorized
      operationId: permissions.check
      parameters:
      - description: ''''''
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/permission.Check'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Check'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.HTTPErrorResponse'
      summary: Permission
      tags:
      - Permission
  /permissions/expand:
    post:
      consumes:
      - application/json
      operationId: permissions.expand
      parameters:
      - description: ''''''
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/permission.Expand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Expand'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.HTTPErrorResponse'
      summary: Permission
      tags:
      - Permission
  /relationships/delete:
    post:
      consumes:
      - application/json
      description: delete relation tuple
      operationId: relationships.delete
      parameters:
      - description: ''''''
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/relationship.Delete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tuple.Tuple'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.HTTPErrorResponse'
      summary: Relationship
      tags:
      - Relationship
  /relationships/read:
    post:
      consumes:
      - application/json
      description: read relation tuple(s)
      operationId: relationships.read
      parameters:
      - description: ''''''
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/relationship.Write'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tuple.Tuple'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.HTTPErrorResponse'
      summary: Relationship
      tags:
      - Relationship
  /relationships/write:
    post:
      consumes:
      - application/json
      description: create new relation tuple
      operationId: relationships.write
      parameters:
      - description: ''''''
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/relationship.Write'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tuple.Tuple'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.HTTPErrorResponse'
      summary: Relationship
      tags:
      - Relationship
  /schemas/read:
    get:
      consumes:
      - application/json
      description: read your authorization model
      operationId: schemas.read
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Message'
        "400":
          description: Bad Request
          schema:
            items:
              $ref: '#/definitions/schema.Entity'
            type: array
      summary: Schema
      tags:
      - Schema
  /schemas/replace:
    post:
      consumes:
      - application/json
      description: replace your authorization model
      operationId: schemas.replace
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.HTTPErrorResponse'
      summary: Schema
      tags:
      - Schema
  /status/ping:
    get:
      consumes:
      - application/json
      operationId: ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.HTTPErrorResponse'
      summary: Server
      tags:
      - Server
  /status/version:
    get:
      consumes:
      - application/json
      operationId: version
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.HTTPErrorResponse'
      summary: Server
      tags:
      - Server
swagger: "2.0"
