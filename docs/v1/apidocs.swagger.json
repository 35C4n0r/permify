{
  "swagger": "2.0",
  "info": {
    "title": "Permify API",
    "description": "Permify is an open-source authorization service for creating and maintaining fine-grained authorizations across your individual applications and services. Permify converts authorization data as relational tuples into a database you point at. We called that database a Write Database (WriteDB) and it behaves as a centralized data source for your authorization system. You can model of your authorization with Permify's DSL - Permify Schema - and perform access checks with a single API call anywhere on your stack. Access decisions made according to stored relational tuples.",
    "version": "v0.0.0-alpha8",
    "contact": {
      "name": "API Support",
      "url": "https://github.com/Permify/base/issues",
      "email": "hello@base.co"
    },
    "license": {
      "name": "GNU Affero General Public License v3.0",
      "url": "https://github.com/Permify/base/blob/master/LICENSE"
    }
  },
  "tags": [
    {
      "name": "Permission"
    },
    {
      "name": "Schema"
    },
    {
      "name": "Relationship"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/permissions/check": {
      "post": {
        "summary": "This method returns a decision about whether user can perform an action on a certain resource. For example, Can the user 1 push to repository 1?",
        "operationId": "permissions.check",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PermissionCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermissionCheckRequest"
            }
          }
        ],
        "tags": [
          "Permission"
        ]
      }
    },
    "/v1/permissions/expand": {
      "post": {
        "summary": "expand relationships according to schema",
        "operationId": "permissions.expand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PermissionExpandResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermissionExpandRequest"
            }
          }
        ],
        "tags": [
          "Permission"
        ]
      }
    },
    "/v1/permissions/lookup-query": {
      "post": {
        "operationId": "permissions.lookupQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PermissionLookupQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermissionLookupQueryRequest"
            }
          }
        ],
        "tags": [
          "Permission"
        ]
      }
    },
    "/v1/relationships/delete": {
      "post": {
        "summary": "delete relation tuple",
        "operationId": "relationships.delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RelationshipDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelationshipDeleteRequest"
            }
          }
        ],
        "tags": [
          "Relationship"
        ]
      }
    },
    "/v1/relationships/read": {
      "post": {
        "summary": "read relation tuple(s)",
        "operationId": "relationships.read",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RelationshipReadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelationshipReadRequest"
            }
          }
        ],
        "tags": [
          "Relationship"
        ]
      }
    },
    "/v1/relationships/write": {
      "post": {
        "summary": "create new relation tuple",
        "operationId": "relationships.write",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RelationshipWriteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelationshipWriteRequest"
            }
          }
        ],
        "tags": [
          "Relationship"
        ]
      }
    },
    "/v1/schemas/lookup": {
      "post": {
        "summary": "lookup your authorization model",
        "operationId": "schemas.lookup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SchemaLookupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaLookupRequest"
            }
          }
        ],
        "tags": [
          "Schema"
        ]
      }
    },
    "/v1/schemas/read": {
      "post": {
        "summary": "read your authorization model",
        "operationId": "schemas.read",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SchemaReadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaReadRequest"
            }
          }
        ],
        "tags": [
          "Schema"
        ]
      }
    },
    "/v1/schemas/write": {
      "post": {
        "summary": "write your authorization model",
        "operationId": "schemas.write",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SchemaWriteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaWriteRequest"
            }
          }
        ],
        "tags": [
          "Schema"
        ]
      }
    }
  },
  "definitions": {
    "ActionDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "child": {
          "$ref": "#/definitions/Child"
        }
      },
      "title": "ActionDefinition"
    },
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "Child": {
      "type": "object",
      "properties": {
        "leaf": {
          "$ref": "#/definitions/Leaf"
        },
        "rewrite": {
          "$ref": "#/definitions/Rewrite"
        }
      },
      "title": "Child"
    },
    "ComputedUserSet": {
      "type": "object",
      "properties": {
        "relation": {
          "type": "string"
        }
      },
      "title": "ComputedUserSet"
    },
    "Entity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "Entity"
    },
    "EntityAndRelation": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Entity"
        },
        "relation": {
          "type": "string"
        }
      }
    },
    "EntityDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "relations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/RelationDefinition"
          },
          "title": "[\"relation_name\"] =\u003e RelationDefinition"
        },
        "actions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ActionDefinition"
          },
          "title": "[\"action_name\"] =\u003e ActionDefinition"
        },
        "option": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "EntityDefinition"
    },
    "EntityFilter": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Expand": {
      "type": "object",
      "properties": {
        "target": {
          "$ref": "#/definitions/EntityAndRelation"
        },
        "expand": {
          "$ref": "#/definitions/ExpandTreeNode"
        },
        "leaf": {
          "$ref": "#/definitions/Subjects"
        }
      },
      "title": "Expand"
    },
    "ExpandTreeNode": {
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "#/definitions/ExpandTreeNode.Operation"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Expand"
          }
        }
      },
      "title": "ExpandTreeNode"
    },
    "ExpandTreeNode.Operation": {
      "type": "string",
      "enum": [
        "OPERATION_UNSPECIFIED",
        "OPERATION_UNION",
        "OPERATION_INTERSECTION",
        "OPERATION_ROOT"
      ],
      "default": "OPERATION_UNSPECIFIED",
      "title": "Operation"
    },
    "IndexedSchema": {
      "type": "object",
      "properties": {
        "entityDefinitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EntityDefinition"
          }
        },
        "relationDefinitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/RelationDefinition"
          },
          "title": "[\"entity_name#relation_name\"] =\u003e RelationDefinition"
        },
        "actionDefinitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ActionDefinition"
          },
          "title": "[\"entity_name#action_name\"] =\u003e ActionDefinition"
        }
      },
      "title": "IndexedSchema"
    },
    "Leaf": {
      "type": "object",
      "properties": {
        "exclusion": {
          "type": "boolean"
        },
        "computedUserSet": {
          "$ref": "#/definitions/ComputedUserSet"
        },
        "tupleToUserSet": {
          "$ref": "#/definitions/TupleToUserSet"
        }
      },
      "title": "Leaf"
    },
    "PermissionCheckRequest": {
      "type": "object",
      "properties": {
        "schema_version": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/Entity"
        },
        "action": {
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Subject"
        },
        "depth": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CheckRequest"
    },
    "PermissionCheckResponse": {
      "type": "object",
      "properties": {
        "can": {
          "type": "boolean",
          "example": true
        },
        "remaining_depth": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PermissionCheckResponse"
    },
    "PermissionExpandRequest": {
      "type": "object",
      "properties": {
        "schema_version": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/Entity"
        },
        "action": {
          "type": "string"
        }
      },
      "title": "PermissionExpandRequest"
    },
    "PermissionExpandResponse": {
      "type": "object",
      "properties": {
        "tree": {
          "$ref": "#/definitions/Expand"
        }
      },
      "title": "PermissionExpandResponse"
    },
    "PermissionLookupQueryRequest": {
      "type": "object",
      "properties": {
        "schema_version": {
          "type": "string"
        },
        "entity_type": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Subject"
        }
      },
      "title": "LookupQueryRequest"
    },
    "PermissionLookupQueryResponse": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      },
      "title": "LookupQueryResponse"
    },
    "RelationDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "entityReference": {
          "$ref": "#/definitions/RelationReference"
        },
        "relationReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelationReference"
          },
          "title": "relation reference includes entity reference"
        },
        "option": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "RelationDefinition"
    },
    "RelationReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "RelationReference"
    },
    "RelationshipDeleteRequest": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Entity"
        },
        "relation": {
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Subject"
        }
      },
      "title": "RelationshipDeleteRequest"
    },
    "RelationshipDeleteResponse": {
      "type": "object",
      "properties": {
        "tuple": {
          "$ref": "#/definitions/Tuple"
        }
      },
      "title": "RelationshipDeleteResponse"
    },
    "RelationshipReadRequest": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/TupleFilter"
        }
      },
      "title": "RelationshipReadRequest"
    },
    "RelationshipReadResponse": {
      "type": "object",
      "properties": {
        "tuples": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tuple"
          }
        }
      },
      "title": "RelationshipReadResponse"
    },
    "RelationshipWriteRequest": {
      "type": "object",
      "properties": {
        "schema_version": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/Entity"
        },
        "relation": {
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Subject"
        }
      },
      "title": "RelationshipWriteRequest"
    },
    "RelationshipWriteResponse": {
      "type": "object",
      "properties": {
        "tuple": {
          "$ref": "#/definitions/Tuple"
        }
      },
      "title": "RelationshipWriteResponse"
    },
    "Rewrite": {
      "type": "object",
      "properties": {
        "rewriteOperation": {
          "$ref": "#/definitions/Rewrite.Operation"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Child"
          }
        }
      },
      "title": "Rewrite"
    },
    "Rewrite.Operation": {
      "type": "string",
      "enum": [
        "OPERATION_UNSPECIFIED",
        "OPERATION_UNION",
        "OPERATION_INTERSECTION"
      ],
      "default": "OPERATION_UNSPECIFIED",
      "title": "Operation"
    },
    "SchemaLookupRequest": {
      "type": "object",
      "properties": {
        "schema_version": {
          "type": "string"
        },
        "entity_type": {
          "type": "string"
        },
        "relation_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "SchemaLookupRequest"
    },
    "SchemaLookupResponse": {
      "type": "object",
      "properties": {
        "action_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "SchemaLookupResponse"
    },
    "SchemaReadRequest": {
      "type": "object",
      "properties": {
        "schema_version": {
          "type": "string"
        }
      },
      "title": "SchemaReadRequest"
    },
    "SchemaReadResponse": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/IndexedSchema"
        }
      },
      "title": "SchemaReadRequest"
    },
    "SchemaWriteRequest": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "string"
        }
      },
      "title": "SchemaWriteRequest"
    },
    "SchemaWriteResponse": {
      "type": "object",
      "properties": {
        "schema_version": {
          "type": "string"
        }
      },
      "title": "SchemaWriteResponse"
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Any"
          }
        }
      }
    },
    "Subject": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "relation": {
          "type": "string"
        }
      },
      "title": "Subject"
    },
    "SubjectFilter": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "relation": {
          "type": "string"
        }
      },
      "title": "Subject"
    },
    "Subjects": {
      "type": "object",
      "properties": {
        "exclusion": {
          "type": "boolean"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subject"
          }
        }
      },
      "title": "Subjects"
    },
    "Tuple": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Entity"
        },
        "relation": {
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Subject"
        }
      },
      "title": "Tuple"
    },
    "TupleFilter": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EntityFilter"
        },
        "relation": {
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/SubjectFilter"
        }
      }
    },
    "TupleToUserSet": {
      "type": "object",
      "properties": {
        "relation": {
          "type": "string"
        }
      },
      "title": "TupleToUserSet"
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
